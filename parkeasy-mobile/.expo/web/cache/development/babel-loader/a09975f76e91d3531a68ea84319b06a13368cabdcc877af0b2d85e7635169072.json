{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    loading = _useState0[0],\n    setLoading = _useState0[1];\n  var _useAuth = useAuth(),\n    register = _useAuth.register;\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name || !email || !password || !confirmPassword) {\n        Alert.alert('Error', 'Please fill in all fields');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Error', 'Passwords do not match');\n        return;\n      }\n      if (password.length < 6) {\n        Alert.alert('Error', 'Password must be at least 6 characters');\n        return;\n      }\n      setLoading(true);\n      var result = yield register(name, email, password);\n      setLoading(false);\n      if (!result.success) {\n        Alert.alert('Registration Failed', result.message);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Create Account\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Join ParkEasy to find and book parking spots\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Full Name\",\n        value: name,\n        onChangeText: setName,\n        placeholderTextColor: \"#666\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        placeholderTextColor: \"#666\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true,\n        placeholderTextColor: \"#666\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        secureTextEntry: true,\n        placeholderTextColor: \"#666\"\n      }), _jsx(TouchableOpacity, {\n        style: [styles.registerButton, loading && styles.disabledButton],\n        onPress: handleRegister,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.registerButtonText,\n          children: loading ? 'Creating Account...' : 'Create Account'\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginLink,\n        onPress: function onPress() {\n          return navigation.navigate('Login');\n        },\n        children: _jsxs(Text, {\n          style: styles.loginLinkText,\n          children: [\"Already have an account? \", _jsx(Text, {\n            style: styles.loginLinkBold,\n            children: \"Sign in\"\n          })]\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa'\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 30\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#007bff',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  input: {\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 15,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  registerButton: {\n    backgroundColor: '#28a745',\n    borderRadius: 8,\n    padding: 15,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  disabledButton: {\n    backgroundColor: '#ccc'\n  },\n  registerButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  loginLink: {\n    alignItems: 'center'\n  },\n  loginLinkText: {\n    color: '#666',\n    fontSize: 16\n  },\n  loginLinkBold: {\n    color: '#007bff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","KeyboardAvoidingView","Platform","useAuth","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState0","loading","setLoading","_useAuth","register","handleRegister","_ref2","_asyncToGenerator","alert","length","result","success","message","apply","arguments","style","styles","container","behavior","OS","children","content","title","subtitle","input","placeholder","value","onChangeText","placeholderTextColor","keyboardType","autoCapitalize","secureTextEntry","registerButton","disabledButton","onPress","disabled","registerButtonText","loginLink","navigate","loginLinkText","loginLinkBold","create","flex","backgroundColor","justifyContent","paddingHorizontal","fontSize","fontWeight","color","textAlign","marginBottom","borderWidth","borderColor","borderRadius","padding","alignItems"],"sources":["C:/Users/Gains/Documents/GitHub/Parkeasy/parkeasy-mobile/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from 'react-native';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { register } = useAuth();\r\n\r\n  const handleRegister = async () => {\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      Alert.alert('Error', 'Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      Alert.alert('Error', 'Password must be at least 6 characters');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const result = await register(name, email, password);\r\n    setLoading(false);\r\n\r\n    if (!result.success) {\r\n      Alert.alert('Registration Failed', result.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView \r\n      style={styles.container} \r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n    >\r\n      <View style={styles.content}>\r\n        <Text style={styles.title}>Create Account</Text>\r\n        <Text style={styles.subtitle}>Join ParkEasy to find and book parking spots</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Full Name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n          placeholderTextColor=\"#666\"\r\n        />\r\n        \r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          placeholderTextColor=\"#666\"\r\n        />\r\n        \r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n          placeholderTextColor=\"#666\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n          secureTextEntry\r\n          placeholderTextColor=\"#666\"\r\n        />\r\n\r\n        <TouchableOpacity \r\n          style={[styles.registerButton, loading && styles.disabledButton]} \r\n          onPress={handleRegister}\r\n          disabled={loading}\r\n        >\r\n          <Text style={styles.registerButtonText}>\r\n            {loading ? 'Creating Account...' : 'Create Account'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity \r\n          style={styles.loginLink}\r\n          onPress={() => navigation.navigate('Login')}\r\n        >\r\n          <Text style={styles.loginLinkText}>\r\n            Already have an account? <Text style={styles.loginLinkBold}>Sign in</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 30,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 8,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  registerButton: {\r\n    backgroundColor: '#28a745',\r\n    borderRadius: 8,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#ccc',\r\n  },\r\n  registerButtonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  loginLink: {\r\n    alignItems: 'center',\r\n  },\r\n  loginLinkText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n  },\r\n  loginLinkBold: {\r\n    color: '#007bff',\r\n    fontWeight: 'bold',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}